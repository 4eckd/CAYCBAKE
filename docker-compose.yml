version: '3.8'

services:
  cayc-bake:
    build:
      context: .
      dockerfile: Dockerfile
    image: cayc-bake:latest
    container_name: cayc-bake
    hostname: cayc-bake
    restart: unless-stopped
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
      - PYTHONUNBUFFERED=1
    volumes:
      # Create directories if they don't exist and mount them
      - ./results:/app/results
      - ./logs:/app/logs
      - ./scripts:/app/scripts
    networks:
      - cayc-network
    ports:
      - "8080:8080"  # Web interface (if implemented)
    command: /bin/bash
    stdin_open: true
    tty: true
    cap_add:
      - NET_RAW  # Required for packet crafting
      - NET_ADMIN  # Required for network scanning
    security_opt:
      - no-new-privileges:true

  # Optional: Database for storing scan results
  postgres:
    image: postgres:15-alpine
    container_name: cayc-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: caycbake
      POSTGRES_USER: caycuser
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - cayc-network
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U caycuser -d caycbake"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Optional: Redis for task queue
  redis:
    image: redis:7-alpine
    container_name: cayc-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-changeme}
    volumes:
      - redis-data:/data
    networks:
      - cayc-network
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  cayc-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.25.0.0/16

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
